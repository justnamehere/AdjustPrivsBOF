#pragma once

#include<windows.h>

#ifndef DEFINE_H
#define DEFINE_H

typedef struct _PARAMS
{
	DWORD dwOperation;
	CHAR* chPrivs;
}PARAMS, * PPARAMS;

DECLSPEC_IMPORT DWORD WINAPI KERNEL32$GetCurrentProcessId(VOID);

DECLSPEC_IMPORT BOOL WINAPI KERNEL32$CloseHandle(HANDLE);

DECLSPEC_IMPORT HANDLE WINAPI KERNEL32$OpenProcess(DWORD, BOOL, DWORD);

DECLSPEC_IMPORT LPVOID WINAPI KERNEL32$HeapAlloc(HANDLE, DWORD, SIZE_T);

DECLSPEC_IMPORT BOOL WINAPI KERNEL32$HeapFree(HANDLE, DWORD, LPVOID);

DECLSPEC_IMPORT HANDLE WINAPI KERNEL32$GetProcessHeap();

DECLSPEC_IMPORT BOOL WINAPI ADVAPI32$LookupPrivilegeNameA(LPCSTR, PLUID, LPSTR, LPDWORD);

DECLSPEC_IMPORT HANDLE WINAPI ADVAPI32$OpenProcessToken(HANDLE, DWORD, PHANDLE);

DECLSPEC_IMPORT BOOL WINAPI ADVAPI32$AdjustTokenPrivileges(HANDLE, BOOL,PTOKEN_PRIVILEGES, DWORD, PTOKEN_PRIVILEGES, PDWORD);

DECLSPEC_IMPORT DWORD WINAPI KERNEL32$GetLastError();

DECLSPEC_IMPORT BOOL WINAPI ADVAPI32$GetTokenInformation(HANDLE, TOKEN_INFORMATION_CLASS, LPVOID, DWORD, PDWORD);

DECLSPEC_IMPORT FARPROC WINAPI KERNEL32$GetProcAddress(HMODULE, LPCSTR);

DECLSPEC_IMPORT HMODULE WINAPI KERNEL32$GetModuleHandleA(LPCSTR);

DECLSPEC_IMPORT int __cdecl MSVCRT$strcmp(const char* _Str1, const char* _Str2);

WINBASEAPI size_t __cdecl MSVCRT$strlen(const char* _Str);

#endif